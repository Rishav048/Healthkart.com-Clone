import { getCard, userMaxprice, userPrice } from '@/redux/card/card.action'
import { Box, Heading, Stack, Text } from '@chakra-ui/react'
import Footer from 'Components/Cart/Footer'
import Nav from 'Components/Cart/Nav'
import OrderSummary from 'Components/Cart/OrderSummary'
import Paymethod from 'Components/Payment/Paymethod'
import Head from 'next/head'
import React, { useEffect, useState } from 'react'
import { useDispatch, useSelector } from 'react-redux'
import axios from 'axios'
export default function Payment() {
  const [maxprice,setMaxprice] = useState(0)
  const [totalprice,setTotalprice] = useState(0)
  const {data,totalPrice,totalMaxprice} = useSelector((store)=>store.card)
  const dispatch = useDispatch()
  const [data2,setData2]= useState([])
  const handleMaxprice = ()=>{
    let ans = 0
    data.Orders.map((el)=>{
        return ans+= (el.product_minimum_offer_price) * el.quantity
    })

    setMaxprice(ans)
    dispatch(userMaxprice(maxprice))

}

const handleTotalprice = ()=>{
  let ans = 0
  data.Orders.map((el)=>{
      return ans+= el.product_price * el.quantity
  })

  setTotalprice(ans)
  dispatch(userPrice(totalprice))

}

const patchCardapi =(user_id,arr) => {
  return axios(`http://localhost:8080/User-Details/${user_id}`,{
    method: "patch",
    data:{Orders: arr}
  });
}

const handlepatch = async (user_id,arr)=>{

  try{

      let res = await patchCardapi(user_id,arr)
      console.log(res.data.Orders)
      setData2(res.data.Orders)
  }
  catch(err){
      console.log(err)
  }

}
// console.log("data2" ,data2)



const handleDelete=(user_id)=>{
  /*
  const deletetodos = session.filter((todo)=>todo.id !== id)
  sessionStorage.setItem("data", JSON.stringify(deletetodos))
  let ss = JSON.parse(sessionStorage.getItem("data"))
  setSession(ss)
  */
  // dispatch(getCard(user_id))
   data2?.map((el)=>{

    
      if(el.cart){
         return el.isOrdered = true
      }

      
  })

  console.log("data2-handle",data2,user_id)
  
     handlepatch(user_id,data2)

   

}

  useEffect(()=>{
    const userId = localStorage.getItem('user_id') 
    dispatch(getCard(userId))
    setData2(data.Orders)
    if(data.id == userId){
      handleTotalprice()
      handleMaxprice()
    }
  },[])
  return (
    <div>
        <Head>
            <title>payment</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/images/logo.png" />
        </Head>
        <main>
            <Nav/>
            <Box bg='#F4F4F4'>
            <Stack direction={{base:'column',lg:'row'}} m='auto' columnGap={'20px'} border={'0px'} justifyContent='center'>
              <Box m='auto' w={{base:'100%',lg:'60%'}} p='20px'>
                    <Box  boxShadow='md' rounded='md' bg='white' pl='10px'>
                      <Heading border='0px'  size='md'>Delivery Address</Heading>
                      <Text pt='10px'>{data.Address}</Text>
                    </Box>
                    <Box border={'0px'} pt='20px' boxShadow='md' rounded='md' bg='white'>
                      <Heading border='0px' pl='10px'  size='md'>Payment Method</Heading>
                      <Paymethod handleDelete={handleDelete}/>
                    </Box>

              </Box>

              <Box m='auto' w={{base:'100%',lg:'40%'}} p='20px' >
              <OrderSummary maxprice={totalMaxprice}  totalprice={totalPrice}/>
              </Box>

            </Stack>

            </Box>
            <Footer/>

        </main>
    </div>
  )
}
